{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/MealItem/MealItem.module.css","components/Meals/AvailableMeals.module.css","components/Layout/Header.module.css","components/UI/Modal.module.css","components/UI/Card.module.css","components/UI/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","components/Meals/MealsSummary.module.css","components/Cart/CartIcon.js","store/cart-context.js","components/Layout/HeaderCartButton.js","assets/meals.jpg","components/Layout/Header.js","components/UI/Card.js","components/UI/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/MealsSummary.js","components/Meals/Meals.js","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Checkout.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","useState","btnIsHighlighted","setBtnIsHighlighted","cartCtx","useContext","numOfCartItems","reduce","currentNum","quantity","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","header","onShowCart","src","mealsImage","alt","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","quantityIsValid","setQuantityIsValid","quantityInputRef","useRef","form","onSubmit","event","preventDefault","enteredQuantity","current","value","enteredQuantityAsNum","trim","onAddToCart","type","min","max","step","defaultValue","MealItem","price","toFixed","meal","name","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetch","process","response","ok","Error","json","key","responseData","loadedMeals","push","fetchMeals","catch","error","message","mealsLoading","mealsError","mealsList","map","MealsSummary","summary","Meals","Backdrop","backdrop","ModalOverlay","modal","Modal","ReactDOM","createPortal","onHideCart","document","getElementById","CartItem","actions","onRemove","onAdd","isEmpty","Checkout","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","onConfirm","control","invalid","onCancel","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","hasItems","cartItemAddHandler","cartItemRemoveHandler","userData","method","body","JSON","stringify","user","orderedItems","cartItems","bind","modalActions","onCloseCart","cartModalContent","Fragment","total","isSubmittingModalContent","didSubmitModalContent","defaultCartState","cartReducerFn","state","action","updatedItems","updatedTotalAmount","addedItem","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","removedId","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","createRoot","render"],"mappings":"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","file":"static/js/main.91e57531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2qM0y\",\"control\":\"Checkout_control__Ty6Eb\",\"actions\":\"Checkout_actions__1LEzj\",\"submit\":\"Checkout_submit__2CGDH\",\"invalid\":\"Checkout_invalid__26773\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2Z72F\",\"total\":\"Cart_total__2jrqO\",\"actions\":\"Cart_actions__34Vrl\",\"button--alt\":\"Cart_button--alt__3jBPh\",\"button\":\"Cart_button__2etBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1raEO\",\"summary\":\"CartItem_summary__3-Zdd\",\"price\":\"CartItem_price__29wXg\",\"quantity\":\"CartItem_quantity__305bu\",\"actions\":\"CartItem_actions__STT3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__1wm2f\",\"icon\":\"HeaderCartButton_icon__3wX_s\",\"badge\":\"HeaderCartButton_badge__1WIQq\",\"bump\":\"HeaderCartButton_bump__1uLNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__1M9DU\",\"description\":\"MealItem_description__3cPX_\",\"price\":\"MealItem_price__2uclp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__29txw\",\"meals-appear\":\"AvailableMeals_meals-appear__1vuiH\",\"mealsLoading\":\"AvailableMeals_mealsLoading__1pcQw\",\"mealsError\":\"AvailableMeals_mealsError__3Rf5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BsAue\",\"main-image\":\"Header_main-image__2BB5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__Bhb88\",\"modal\":\"Modal_modal__3fFn2\",\"slide-down\":\"Modal_slide-down__1luja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3-ZZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1olfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2IWCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__3BzVC\"};","function CartIcon() {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import React from \"react\";\r\n\r\nconst CartContext = React.createContext({\r\n  items: [],\r\n  totalAmount: 0,\r\n  addItem: (item) => {},\r\n  removeItem: (id) => {},\r\n  clearCart: () => {},\r\n});\r\n\r\nexport default CartContext;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\n\r\nimport classes from \"./HeaderCartButton.module.css\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\nfunction HeaderCartButton(props) {\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const numOfCartItems = cartCtx.items.reduce((currentNum, item) => {\r\n    return currentNum + item.quantity;\r\n  }, 0);\r\n\r\n  // reduce() is a javascript method that executes a user-supplied \"reducer\" callback function on each element of the array, in order,\r\n  // passing in the return value from the calculation on the preceding element.\r\n  // The final result of running the reducer across all elements of the array is a single value.\r\n\r\n  //  IN THE ABOVE CASE-\r\n  //  the currentNum is set to zero, coz of the initial value we supplied to reduce() as the second argument\r\n  //  on first execution of reduce(), as the mthod goes through each item in the array (second argument of callback fn named \"item\"),\r\n  //  it gets the item.quantity and adds it to the currentNum value that was zero initially\r\n  //  on each execution, that is for each item of the array, the method runs, and the next item.quantity gets added to previous value (sum),\r\n  //  thus returning a single value in the end, which is the sum total of all items in the array, that is the quantity or number of items in the cart\r\n\r\n  const btnClasses = `${classes.button} ${\r\n    btnIsHighlighted ? classes.bump : \"\"\r\n  }`;\r\n\r\n  const { items } = cartCtx;\r\n\r\n  useEffect(() => {\r\n    if (items.length === 0) {\r\n      return;\r\n    }\r\n    setBtnIsHighlighted(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [items]);\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numOfCartItems}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default HeaderCartButton;\r\n","export default __webpack_public_path__ + \"static/media/meals.c9239f4b.jpg\";","import React, { Fragment } from \"react\";\r\n\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\nimport mealsImage from \"../../assets/meals.jpg\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <h1>Spice It Up</h1>\r\n        <HeaderCartButton onClick={props.onShowCart}/>\r\n      </header>\r\n      <div className={classes[\"main-image\"]}>\r\n        <img src={mealsImage} alt=\"A table full of delicious food.\" />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Card.module.css\";\r\n\r\nfunction Card(props) {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={classes.input}>\r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input {...props.input} ref={ref}/>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n\r\n// {/* <label htmlFor={props.input.id}>{props.label}</label>\r\n// props.input means our Input component will have a prop named input which will hold an object with some properties(keyvalue pairs) and props.input.id gives access to id of the object stored in input prop\r\n// props.label means Input component has a prop k/a label */}\r\n\r\n// TRICK TO ADD ALL CONFIGURATIONS PASSED AS PROPS TO OUR COMPONENT USING SPREAD OPERATOR\r\n// using spread operator in <input {...props.input}/>, we ensure that all the key value pairs, that the object in input prop holds, get added as props to our inut element in the Input component\r\n// example: if input object is equal to {type: \"text\"}, then the following gets added as prop to the input element by the spread operator\r\n// <input type=\"text\" />\r\n// the props passed this way can be the default input element attributes (like step, min, max, type) thus helping in making it highly configurable\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport Input from \"../../UI/Input\";\r\nimport classes from \"./MealItemForm.module.css\";\r\n\r\nfunction MealItemForm(props) {\r\n  const [quantityIsValid, setQuantityIsValid] = useState(true);\r\n  const quantityInputRef = useRef();\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredQuantity = quantityInputRef.current.value;\r\n    const enteredQuantityAsNum = +enteredQuantity;\r\n\r\n    if (\r\n      enteredQuantity.trim().length === 0 ||\r\n      enteredQuantityAsNum < 1 ||\r\n      enteredQuantityAsNum > 5\r\n    ) {\r\n      setQuantityIsValid(false);\r\n      return;\r\n    }\r\n\r\n    props.onAddToCart(enteredQuantityAsNum);\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={quantityInputRef}\r\n        label=\"Quantity\"\r\n        input={{\r\n          id: \"quantity_\" + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!quantityIsValid && <p>Please enter a valid quantity(1-5).</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MealItemForm;\r\n","import React, {useContext} from \"react\";\r\n\r\nimport MealItemForm from \"./MealItemForm\";\r\nimport classes from \"./MealItem.module.css\";\r\nimport CartContext from \"../../../store/cart-context\";\r\n\r\nfunction MealItem(props) {\r\n   const cartCtx =  useContext(CartContext);\r\n\r\n  const price = `$${props.price.toFixed(2)}`; //adds $ before price and limits its value to 2 decimal places\r\n\r\n  function addToCartHandler(quantity) {\r\n     cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,\r\n      quantity: quantity,\r\n      price: props.price\r\n     });\r\n  }\r\n\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{props.name}</h3>\r\n        <div className={classes.description}>{props.description}</div>\r\n        <div className={classes.price}>{price}</div>\r\n      </div>\r\n      <div>\r\n        <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default MealItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\n\r\nfunction AvailableMeals() {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  // we want data to be fetched when page loads, thus use useEffect\r\n  useEffect(() => {\r\n    async function fetchMeals() {\r\n      const response = await fetch(process.env.REACT_APP_DATABASE_MEALS_URL);\r\n\r\n      // if there is an error code, an error will be thrown by the fetchMeals function\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\"); //when error is thrown the code hereafter isn't executed\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      // what we get back as data from firebase is object, so to convert it to array-\r\n\r\n      const loadedMeals = [];\r\n\r\n      // go through every nested object in the responseData object, by the specific key, that is the id, m1, m2 so on...and push a new object into the loadedMeals array\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    }\r\n\r\n    fetchMeals().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.mealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section className={classes.mealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AvailableMeals;\r\n","import classes from \"./MealsSummary.module.css\";\r\n\r\nfunction MealsSummary() {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MealsSummary;\r\n","import React, { Fragment } from \"react\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\nimport MealsSummary from \"./MealsSummary\";\r\n\r\nfunction Meals() {\r\n  return (\r\n    <Fragment>\r\n      <MealsSummary />\r\n      <AvailableMeals />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Meals;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nfunction Backdrop(props) {\r\n  return <div className={classes.backdrop} onClick={props.onClick}></div>;\r\n}\r\n\r\nfunction ModalOverlay(props) {\r\n  return <div className={classes.modal}>{props.children}</div>;\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(<Backdrop onClick={props.onHideCart}/>, document.getElementById(\"overlays\"))}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        document.getElementById(\"overlays\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import classes from \"./CartItem.module.css\";\n\nfunction CartItem(props) {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes[\"cart-item\"]}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.quantity}>x {props.quantity}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n}\n\nexport default CartItem;\n","import React, { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\n// HELPER FUNCTIONS--------------------------------------------------------\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isSixChars = (value) => value.trim().length === 6;\r\n// ------------------------------------------------------------------------\r\n\r\nfunction Checkout(props) {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  function confirmHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // we use useRef coz we want the value of inputs on form submission and not on every keystroke\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    // VALIDATING VALUES\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isSixChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    //submit cart data\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div\r\n        className={`${classes.control} ${\r\n          formInputsValidity.name ? \"\" : classes.invalid\r\n        }`}\r\n      >\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input id=\"name\" type=\"text\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div\r\n        className={`${classes.control} ${\r\n          formInputsValidity.street ? \"\" : classes.invalid\r\n        }`}\r\n      >\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input id=\"street\" type=\"text\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div\r\n        className={`${classes.control} ${\r\n          formInputsValidity.postalCode ? \"\" : classes.invalid\r\n        }`}\r\n      >\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        {/* postal code should be type text so that it can start with 0 */}\r\n        <input id=\"postal\" type=\"text\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal code! (6 characters long)</p>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={`${classes.control} ${\r\n          formInputsValidity.city ? \"\" : classes.invalid\r\n        }`}\r\n      >\r\n        <label htmlFor=\"city\">City</label>\r\n        <input id=\"city\" type=\"text\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        {/* CANCEL BUTTON SHOULD HAVE TYPE=\"BUTTON\", SO THAT IT DOES NOT SUBMIT THE FORM */}\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nimport CartContext from \"../../store/cart-context\";\r\n\r\nimport classes from \"./Cart.module.css\";\r\n\r\nfunction Cart(props) {\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false); //for when user clicks confirm to submit ordered items and user data\r\n  const [didSubmit, setDidSubmit] = useState(false); //to handle showing success message on successful post request\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  function cartItemAddHandler(item) {\r\n    cartCtx.addItem({\r\n      ...item,\r\n      quantity: 1,\r\n    });\r\n  }\r\n\r\n  function cartItemRemoveHandler(id) {\r\n    cartCtx.removeItem(id);\r\n  }\r\n\r\n  function orderHandler() {\r\n    setIsCheckout(true); //after order button is clicked, we proceed to checkout, thus set to true here\r\n  }\r\n\r\n  async function submitOrderHandler(userData) {\r\n    setIsSubmitting(true);\r\n    await fetch(process.env.REACT_APP_DATABASE_ORDERS_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: cartCtx.items,\r\n      }),\r\n    });\r\n    //await response from post request, and assuming that it is successful, we then setIsSubmitting back to false\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true); //when post request complete\r\n\r\n    // to clear cart after submission\r\n    cartCtx.clearCart();\r\n  }\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          quantity={item.quantity}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onCloseCart}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onCloseCart} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Order Placed!</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes.button} onClick={props.onCloseCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Modal onHideCart={props.onCloseCart}>\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {isSubmitting && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nfunction cartReducerFn(state, action) {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.addedItem.price * action.addedItem.quantity;\r\n\r\n    // first check if item is already part of array (already in cart), so that it name gets added only once, but quantity chnages accordingly\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.addedItem.id\r\n    ); // checks if the item we are currently looking at in the array (i.e item.id) has the same id as the item we are adding through the action now (action.item.id), and returns the index of that item if true\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    let updatedItems;\r\n\r\n    //  if existingCartItem is true, that is it exists already\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        quantity: existingCartItem.quantity + action.addedItem.quantity, //this copies existingCartItem object and then just quantity is updated\r\n      };\r\n      updatedItems = [...state.items]; //update the array by copying existing items into a new array\r\n      updatedItems[existingCartItemIndex] = updatedItem; //overwrite the old item we found with the new updated item\r\n    } else {\r\n      // to add new items to array using state, where state.items gives latest state snapshot of all items in the array\r\n      updatedItems = state.items.concat(action.addedItem);\r\n      // concat adds new item to an array, but unlike push() doesn't edit existing array, but creates a new array\r\n      // concat used here so that our state snapshot isn't changed in any way coz it's used for reference\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.removedId\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n    let updatedItems;\r\n\r\n    // if that item is the last item in the cart, like say, only 1 dal makhni left, then on remove it should be completely removed from the cart\r\n    if (existingCartItem.quantity === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.removedId);\r\n    } else {\r\n      // else the item stays in cart but its quantity reduces by one\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        quantity: existingCartItem.quantity - 1,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  // to clear the cart after order submission\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n\r\n  return defaultCartState;\r\n}\r\n\r\nfunction CartProvider(props) {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducerFn,\r\n    defaultCartState\r\n  );\r\n\r\n  function addItemToCartHandler(item) {\r\n    dispatchCartAction({ type: \"ADD\", addedItem: item });\r\n  }\r\n\r\n  function removeItemFromCartHandler(id) {\r\n    dispatchCartAction({ type: \"REMOVE\", removedId: id });\r\n  }\r\n\r\n  function clearCartHandler() {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CartProvider;\r\n","import React, { useState } from \"react\";\n\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  function showCartHandler() {\n    setCartIsShown(true);\n  }\n\n  function hideCartHandler() {\n    setCartIsShown(false);\n  }\n\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onCloseCart={hideCartHandler} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}